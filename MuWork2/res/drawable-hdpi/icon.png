package eu.pochet.android.muwork;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import android.app.Activity;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.provider.CalendarContract.Calendars;
import android.provider.CalendarContract.Events;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;

public class MuWorkActivity extends Activity implements OnItemSelectedListener {

	private ArrayAdapter<CharSequence> daysAdapter = null;
	
	private CharSequence[] smonths = null;
	
	private String year = null;
	
	private String month = null;
	
	private String day= null;
	             
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		
		smonths = getResources().getTextArray(R.array.smonths);

	    Spinner spinner = (Spinner) findViewById(R.id.month);
	    ArrayAdapter<CharSequence> adapter = new ArrayAdapter<CharSequence>(
	    		this,
	    		android.R.layout.simple_spinner_item,
	    		getMonthList()
	    );
	    
	    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	    spinner.setAdapter(adapter);
	    spinner.setOnItemSelectedListener(this);

	    daysAdapter = new ArrayAdapter<CharSequence>(this, R.layout.list_item, R.id.day);
	    
	    ListView lv = (ListView) findViewById(R.id.days);
	    lv.setTextFilterEnabled(true);
		lv.setAdapter(daysAdapter);
	}
	
	private List<CharSequence> getMonthList() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy");
		Calendar today = Calendar.getInstance();
		List<CharSequence> res = new ArrayList<CharSequence>();
		res.add(smonths[today.get(Calendar.MONTH)] + " " + sdf.format(today.getTime()));
		today.add(Calendar.MONTH, 1);
		res.add(smonths[today.get(Calendar.MONTH)] + " " + sdf.format(today.getTime()));
		today.add(Calendar.MONTH, 1);
		res.add(smonths[today.get(Calendar.MONTH)] + " " + sdf.format(today.getTime()));
		return res;
	}
	
	public void petitmatin(View view) {
		setDay(view);
		addToCalendar(getApplicationContext(), "06:45", "10:36");
	}
	
	public void grandmatin(View view) {
		setDay(view);
		addToCalendar(getApplicationContext(), "06:45", "14:20");
	}
	
	public void petitaprem(View view) {
		setDay(view);
		addToCalendar(getApplicationContext(), "17:00", "20:46");
	}
	
	public void grandaprem(View view) {
		setDay(view);
		addToCalendar(getApplicationContext(), "14:00", "21:36");
	}
	
	private void setDay(View view) {
		LinearLayout ll = (LinearLayout) view.getParent();
		TextView t = (TextView) ll.findViewById(R.id.day);
		day = t.getText().toString();
	}
	
	@Override
	public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
		String v = (String) parent.getItemAtPosition(position);
		String smonth = v.substring(0, v.lastIndexOf(" "));
		int i = 1;
		for (; i <= smonths.length; i++) {
			if(smonth.equals(smonths[i - 1])) {
				month = "" + i;
			}
		}
		year = v.substring(v.lastIndexOf(" ") + 1);
		updateDays(i);
	}
	
	@Override
	public void onNothingSelected(AdapterView<?> parent) {
	}
	
	private void updateDays(int month) {
		int nb = 0;
		switch(month) {
			case 4:
			case 6:
			case 9:
			case 11:
				nb = 30;
				break;
			case 2:
				nb = 28;
				break;
			default:
				nb = 31;
		}
		nb++;
		daysAdapter.clear();
		for (int i = 1; i < nb; i++) {
			daysAdapter.add("" + i);
		}
	}

	// Projection array. Creating indices for this array instead of doing
	// dynamic lookups improves performance.
	public static final String[] EVENT_PROJECTION = new String[] {
	    Calendars._ID,                           // 0
	    Calendars.ACCOUNT_NAME,     